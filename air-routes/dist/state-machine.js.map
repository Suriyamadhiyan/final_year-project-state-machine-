{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 27d02f556042a706a836","webpack:///./src/core/utils/utils.js","webpack:///./src/StateMachine.js","webpack:///./src/core/maps/ValueMap.js","webpack:///./src/core/objects/events.js","webpack:///./src/core/objects/errors.js","webpack:///./src/main.js","webpack:///./src/core/classes/Config.js","webpack:///./src/core/maps/HandlerMap.js","webpack:///./src/core/parsers/HandlerParser.js","webpack:///./src/core/parsers/HandlerMeta.js","webpack:///./src/core/lexer/Lexer.js","webpack:///./src/core/lexer/Rule.js","webpack:///./src/core/lexer/Token.js","webpack:///./src/core/maps/TransitionMap.js","webpack:///./src/core/parsers/TransitionParser.js","webpack:///./src/core/parsers/TransitionMeta.js","webpack:///./src/core/classes/Transition.js","webpack:///./src/StateHelper.js","webpack:///./src/helpers/ObjectHelper.js","webpack:///./src/helpers/jQueryHelper.js","webpack:///./src/helpers/VueRouter.js"],"names":["isObject","isArray","isString","isFunction","isDefined","isUndefined","trim","diff","toHash","value","Object","prototype","toString","call","Array","Function","String","replace","a","b","da","filter","indexOf","v","db","concat","values","reduce","obj","StateMachine","options","transitions","TransitionMap","handlers","HandlerMap","initialize","config","transition","state","Config","forEach","parse","tx","add","action","from","to","initial","length","getStates","name","hasOwnProperty","on","methods","scope","start","trigger","reset","cancel","do","canDo","isPaused","rest","Transition","create","exec","go","force","has","clear","end","getActionFor","errors","console","warn","getActionsFrom","canGo","hasState","is","isStarted","isTransitioning","paused","isComplete","final","pause","resume","arguments","updateTransitions","remove","id","fn","invalid","meta","path","off","result","Error","message","target","error","namespace","hasAction","split","apply","constructor","getDefaultOrder","fsm","method","callback","statesBefore","actionsBefore","getActions","statesAfter","actionsAfter","states","actions","ValueMap","data","set","insert","get","undefined","keys","key","shift","index","pop","push","parent","arr","join","splice","ActionEvent","StateEvent","SystemEvent","TransitionEvent","event","type","ParseError","StateHelper","match","order","defaults","assign","map","test","isSystem","token","isTransition","expandGroups","input","rx","matches","group","items","item","output","addPath","results","HandlerMeta","_id","addError","_defaults","parser","patterns","alias","namespaced","oneAction","oneActionEvent","anyActionEvent","oneState","oneStateEvent","anyStateEvent","oneStateAction","lexer","Lexer","paths","parsePath","tokens","process","rules","addRule","source","next","Rule","substr","some","rule","Token","LexerError","slice","update","asMap","wildcard","getStatesFrom","getStateFor","hasTransition","getError","TransitionMeta","stack","op","unpause","handler","params","vars","queue","all","Event","object","jQuery","vueRouter","setup","ObjectHelper","onChange","bind","onPause","onModify","jQueryHelper","controls","control","selectors","elements","$","onModifyStates","onModifyActions","updateStates","updateButtons","attr","find","removeClass","addClass","each","i","e","disabled","toggleClass","router","updateRoute","currentRoute","afterEach","route"],"mappings":"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","file":"state-machine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 27d02f556042a706a836","export function isObject (value)\r\n{\r\n    return Object.prototype.toString.call(value) === '[object Object]';\r\n}\r\n\r\nexport function isArray (value)\r\n{\r\n    return value instanceof Array;\r\n}\r\n\r\nexport function isString (value)\r\n{\r\n    return typeof value === 'string';\r\n}\r\n\r\nexport function isFunction(value)\r\n{\r\n    return value instanceof Function;\r\n}\r\n\r\nexport function isDefined (value)\r\n{\r\n    return typeof value !== 'undefined';\r\n}\r\n\r\nexport function isUndefined (value)\r\n{\r\n    return typeof value === 'undefined';\r\n}\r\n\r\nexport function trim (value)\r\n{\r\n    return String(value || '').replace(/^\\s+|\\s+$/g, '');\r\n}\r\n\r\nexport function diff (a, b)\r\n{\r\n    var da = b.filter( v => a.indexOf(v) < 0 );\r\n    var db = a.filter( v => b.indexOf(v) < 0 );\r\n    return db.concat(da)\r\n}\r\n\r\nexport function toHash(values) {\r\n    return values.reduce(function (obj, value) {\r\n        obj[value] = true;\r\n        return obj;\r\n    }, {})\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/utils/utils.js","import Config from './core/classes/Config';\r\nimport HandlerMap from './core/maps/HandlerMap';\r\nimport TransitionMap from './core/maps/TransitionMap';\r\nimport Transition from './core/classes/Transition';\r\nimport { diff } from './core/utils/utils';\r\n\r\n\r\n/**\r\n * StateMachine constructor\r\n *\r\n * @param   {Object|null}    options\r\n * @constructor\r\n */\r\nfunction StateMachine (options)\r\n{\r\n    this.transitions    = new TransitionMap();\r\n    this.handlers       = new HandlerMap(this);\r\n    this.initialize(options);\r\n}\r\n\r\n/**\r\n * StateMachine prototype\r\n *\r\n * The property examples below illustrate a 4-state machine, with states:\r\n *\r\n * - intro > settings > summary > end\r\n *\r\n * And actions:\r\n *\r\n * - back | next | restart | finish\r\n */\r\nStateMachine.prototype =\r\n{\r\n    // -----------------------------------------------------------------------------------------------------------------\r\n    // properties\r\n\r\n        /**\r\n         * Configuration object\r\n         *\r\n         * @var {Config}\r\n         */\r\n        config      : null,\r\n\r\n        /**\r\n         * Map of all transitions\r\n         *\r\n         * @var {TransitionMap}\r\n         */\r\n        transitions : null,\r\n\r\n        /**\r\n         * Map of all handlers\r\n         *\r\n         * @var {HandlerMap}\r\n         */\r\n        handlers    : null,\r\n\r\n        /**\r\n         * Any active Transition object that is driving the state change\r\n         *\r\n         * @var {Transition}\r\n         */\r\n        transition  : null,\r\n\r\n        /**\r\n         * The current state\r\n         *\r\n         * @var {string}\r\n         */\r\n        state       : '',\r\n\r\n\r\n    // -----------------------------------------------------------------------------------------------------------------\r\n    // private methods\r\n\r\n        /**\r\n         * Initialize the FSM with options\r\n         *\r\n         * @private\r\n         * @param options\r\n         */\r\n        initialize:function (options = {})\r\n        {\r\n            // state\r\n            this.state          = '';\r\n\r\n            // build config\r\n            let config  = new Config(options);\r\n            this.config = config;\r\n\r\n            // pre-process all transitions\r\n            let transitions = [];\r\n            if(Array.isArray(options.transitions))\r\n            {\r\n                options.transitions.forEach( tx =>\r\n                {\r\n                    transitions = transitions.concat(this.transitions.parse(tx));\r\n                });\r\n            }\r\n\r\n            // add transitions\r\n            transitions.forEach( transition =>\r\n            {\r\n                this.transitions.add(transition.action, transition.from, transition.to);\r\n            });\r\n\r\n            // get initial state (must be done after state collation)\r\n            if( ! config.initial && this.transitions.length )\r\n            {\r\n                config.initial = this.transitions.getStates()[0];\r\n            }\r\n\r\n            // add handlers\r\n            if(options.handlers)\r\n            {\r\n                for(let name in options.handlers)\r\n                {\r\n                    if(options.handlers.hasOwnProperty(name))\r\n                    {\r\n                        this.on(name, options.handlers[name]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // add methods\r\n            if(options.methods)\r\n            {\r\n                if(!this.config.scope)\r\n                {\r\n                    this.config.scope = this;\r\n                }\r\n                for(var name in options.methods)\r\n                {\r\n                    if(options.methods.hasOwnProperty(name) && !this.hasOwnProperty(name))\r\n                    {\r\n                        this[name] = options.methods[name];\r\n                    }\r\n                }\r\n            }\r\n\r\n            // start\r\n            if(this.config.start)\r\n            {\r\n                this.start();\r\n            }\r\n\r\n            // return\r\n            return this;\r\n        },\r\n\r\n        start: function ()\r\n        {\r\n            this.state = this.config.initial;\r\n            this.handlers.trigger('system.start');\r\n            if(this.state)\r\n            {\r\n                this.handlers.trigger('system.change', this.state);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Reset the FSM to the initial, or supplied, state\r\n         *\r\n         * @returns {StateMachine}\r\n         */\r\n        reset:function(initial = '')\r\n        {\r\n            let state = initial || this.config.initial;\r\n            this.handlers.trigger('system.reset');\r\n            if(this.transition)\r\n            {\r\n                this.transition.cancel();\r\n                delete this.transition;\r\n            }\r\n            if(this.state !== state)\r\n            {\r\n                this.state = state;\r\n                this.handlers.trigger('system.change', this.state);\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n    // -----------------------------------------------------------------------------------------------------------------\r\n    // api\r\n\r\n        /**\r\n         * Attempt to run an action, resulting in a transition to a state\r\n         *\r\n         * @param   {string}    action\r\n         * @param   {*[]}       rest\r\n         * @returns {boolean}\r\n         */\r\n        do: function (action, ...rest)\r\n        {\r\n            if(this.canDo(action) && !this.isPaused())\r\n            {\r\n                this.transition = Transition.create(this, action, rest);\r\n                this.transition.exec();\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Attempt to go to a state\r\n         *\r\n         * Queries TransitionMap instance to see if a transition exists, then calls the related action if it does\r\n         *\r\n         * @param   {string}    state\r\n         * @param   {boolean}   [force]\r\n         * @returns {boolean}\r\n         */\r\n        go: function (state, force = false)\r\n        {\r\n            if(this.has(state))\r\n            {\r\n                if(force)\r\n                {\r\n                    if(this.transition)\r\n                    {\r\n                        this.transition.clear();\r\n                    }\r\n                    this.transition = Transition.force(this, state);\r\n                    return this.end();\r\n                }\r\n                var action = this.transitions.getActionFor(this.state, state);\r\n                if(action)\r\n                {\r\n                    return this.do(action);\r\n                }\r\n                this.config.errors > 0 && console.warn('No transition exists from \"%s\" to \"%s\"', this.state, state);\r\n                return false;\r\n            }\r\n            this.config.errors > 0 && console.warn('No such state \"%s\"', state);\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Query transition map to see if a named action is available\r\n         *\r\n         * @param   {string}        action\r\n         * @returns {boolean}\r\n         */\r\n        canDo: function (action)\r\n        {\r\n            return this.transitions.getActionsFrom(this.state).indexOf(action) !== -1;\r\n        },\r\n\r\n        /**\r\n         * Query transition map to see if a state is available to go to\r\n         *\r\n         * @param to\r\n         * @return {boolean}\r\n         */\r\n        canGo: function (to)\r\n        {\r\n            return this.transitions.getActionFor(this.state, to) !== null;\r\n        },\r\n\r\n        /**\r\n         * Test if a state exists\r\n         *\r\n         * @param   {string}    state\r\n         * @return  {boolean}\r\n         */\r\n        has: function(state)\r\n        {\r\n            return this.transitions.hasState(state);\r\n        },\r\n\r\n        /**\r\n         * Test if the current state is the same as the supplied one\r\n         *\r\n         * @param   {string}    state       A state name to compare against the current state\r\n         * @returns {boolean}\r\n         */\r\n        is: function (state)\r\n        {\r\n            return state === this.state;\r\n        },\r\n\r\n\r\n    // -----------------------------------------------------------------------------------------------------------------\r\n    // flags\r\n\r\n        /**\r\n         * Test if the FSM has started\r\n         *\r\n         * @returns {boolean}\r\n         */\r\n        isStarted: function ()\r\n        {\r\n            return this.state !== '';\r\n        },\r\n\r\n        /**\r\n         * Test if the FSM is transitioning\r\n         *\r\n         * @returns {boolean}\r\n         */\r\n        isTransitioning: function ()\r\n        {\r\n            return !! this.transition;\r\n        },\r\n\r\n        /**\r\n         * Test if the FSM is paused (whilst transitioning)\r\n         *\r\n         * @returns {boolean}\r\n         */\r\n        isPaused: function ()\r\n        {\r\n            return this.transition\r\n                ? this.transition.paused\r\n                : false;\r\n        },\r\n\r\n        /**\r\n         * Test if the FSM is on the \"final\" state\r\n         *\r\n         * @returns {boolean}\r\n         */\r\n        isComplete: function ()\r\n        {\r\n            return this.state === this.config.final;\r\n        },\r\n\r\n\r\n    // -----------------------------------------------------------------------------------------------------------------\r\n    // transitions\r\n\r\n        /**\r\n         * Pause any current transition\r\n         *\r\n         * @returns {StateMachine}\r\n         */\r\n        pause: function ()\r\n        {\r\n            if(this.transition && !this.isPaused())\r\n            {\r\n                this.transition.pause();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Resume any current transition\r\n         *\r\n         * @returns {StateMachine}\r\n         */\r\n        resume: function ()\r\n        {\r\n            if(this.transition && this.isPaused())\r\n            {\r\n                this.transition.resume();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Cancel any current transition\r\n         *\r\n         * @returns {StateMachine}\r\n         */\r\n        cancel: function ()\r\n        {\r\n            if(this.transition)\r\n            {\r\n                this.state = this.transition.from;\r\n                this.transition.cancel();\r\n                delete this.transition;\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * End any current transition, skipping remaining handlers\r\n         *\r\n         * @returns {StateMachine}\r\n         */\r\n        end: function ()\r\n        {\r\n            if(this.transition)\r\n            {\r\n                this.state = this.transition.to;\r\n                this.transition.clear();\r\n                delete this.transition;\r\n                this.handlers.trigger('system.change', this.state);\r\n                if(this.isComplete())\r\n                {\r\n                    this.handlers.trigger('system.complete');\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n    // -----------------------------------------------------------------------------------------------------------------\r\n    // actions\r\n\r\n        /**\r\n         * Add a transition\r\n         *\r\n         * @param   {string}    action\r\n         * @param   {string}    from\r\n         * @param   {string}    to\r\n         * @return  {StateMachine}\r\n         */\r\n        add: function (action, from, to)\r\n        {\r\n            // 1 argument: shorthand transition, i.e 'next : a > b'\r\n            if(arguments.length === 1)\r\n            {\r\n                var transitions = this.transitions.parse(action);\r\n                transitions.forEach( tx => this.add(tx.action, tx.from, tx.to));\r\n                return this;\r\n            }\r\n\r\n            // 3 arguments: longhand transition\r\n            updateTransitions(this, 'add', () => this.transitions.add(action, from, to) );\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove a state\r\n         *\r\n         * @param   {string}    state\r\n         * @return  {StateMachine}\r\n         */\r\n        remove: function (state)\r\n        {\r\n            this.handlers.remove('state.' + state);\r\n            updateTransitions(this, 'remove', () => this.transitions.remove(state) );\r\n            return this;\r\n        },\r\n\r\n\r\n    // -----------------------------------------------------------------------------------------------------------------\r\n    // handlers\r\n\r\n        /**\r\n         * Add an event handler\r\n         *\r\n         * Event handler signatures are built from the following grammar:\r\n         *\r\n         * - token      foo\r\n         * - property   .foo\r\n         * - event      :foo\r\n         * - action     @foo\r\n         * - targets    (foo bar baz)\r\n         *\r\n         * For example:\r\n         *\r\n         * - change\r\n         * - transition.pause\r\n         * - next:end\r\n         * - (a b)@next\r\n         * - a@next\r\n         *\r\n         * The main event types are unique, so can be used without the namespace:\r\n         *\r\n         * - change\r\n         * - pause\r\n         * - complete\r\n         * - ...\r\n         *\r\n         * If your states and events are unique, they can also be used without qualification.\r\n         *\r\n         * See docs and demo for more information\r\n         *\r\n         * @param   {string}        id\r\n         * @param   {Function}      fn\r\n         * @return  {StateMachine}\r\n         */\r\n        on: function (id, fn)\r\n        {\r\n            this.parse(id, this.config.invalid, this.config.errors)\r\n                .forEach( meta => this.handlers.add(meta.path, fn) );\r\n            return this;\r\n        },\r\n\r\n        off: function (id, fn)\r\n        {\r\n            this.parse(id, this.config.invalid, this.config.errors)\r\n                .forEach( meta => this.handlers.remove(meta.path, fn) );\r\n            return this;\r\n        },\r\n\r\n    \r\n    // -----------------------------------------------------------------------------------------------------------------\r\n    // utilities\r\n\r\n        /**\r\n         * Parses a handler id string into HandlerMeta objects\r\n         *\r\n         * @param   {string}    id\r\n         * @param   {boolean}   invalid\r\n         * @param   {number}    errors\r\n         * @returns {HandlerMeta[]}\r\n         */\r\n        parse: function (id, invalid = false, errors = 0)\r\n        {\r\n            return this.handlers.parse(id).filter(result =>\r\n            {\r\n                // picks up unrecognised handlers, namespaces, etc\r\n                if(result instanceof Error)\r\n                {\r\n                    if(errors == 2)\r\n                    {\r\n                        throw result;\r\n                    }\r\n                    errors == 1 && console.warn(result.message);\r\n                    return false;\r\n                }\r\n\r\n                // picks up unrecognised states and actions\r\n                if(result.target !== '*')\r\n                {\r\n                    let error = '';\r\n\r\n                    if(result.namespace === 'state')\r\n                    {\r\n                        if(!this.transitions.hasState(result.target))\r\n                        {\r\n                            error = 'Unrecognised state \"' +result.target+ '\" in handler \"' +result.id+ '\"';\r\n                        }\r\n                    }\r\n                    else if(result.namespace === 'action')\r\n                    {\r\n                        if(!this.transitions.hasAction(result.target))\r\n                        {\r\n                            error = 'Unrecognised action \"' +result.target+ '\" in handler \"' +result.id+ '\"';\r\n                        }\r\n                    }\r\n                    else if(result.namespace === 'state/action')\r\n                    {\r\n                        // variables\r\n                        let [state, action] = result.target.split('@');\r\n\r\n                        // test for state and action\r\n                        if(!this.transitions.hasState(state))\r\n                        {\r\n                            error = 'Unrecognised state \"' +state+ '\" in handler \"' +result.id+ '\"';\r\n                        }\r\n                        if(!this.transitions.hasAction(action))\r\n                        {\r\n                            error = 'Unrecognised action \"' +action+ '\" in handler \"' +result.id+ '\"';\r\n                        }\r\n                    }\r\n\r\n                    // if we have an error, the result was not an existing state or action\r\n                    if(error)\r\n                    {\r\n                        if(errors == 2)\r\n                        {\r\n                            throw new Error(error);\r\n                        }\r\n                        errors == 1 && console.warn(error);\r\n                        return !!invalid;\r\n                    }\r\n                }\r\n\r\n                // must be valid\r\n                return true\r\n            });\r\n        },\r\n\r\n        trigger: function (id, ...rest)\r\n        {\r\n            this.handlers.parse(id).forEach( meta => this.handlers.trigger.apply(this.handlers, [meta.path, ...rest]) );\r\n            return this;\r\n        }\r\n\r\n};\r\n\r\nStateMachine.prototype.constructor = StateMachine;\r\n\r\nexport default StateMachine;\r\n\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// static methods\r\n\r\n    /**\r\n     * Factory method\r\n     *\r\n     * @param   options\r\n     * @returns {StateMachine}\r\n     */\r\n    StateMachine.create = function(options)\r\n    {\r\n        return new StateMachine(options);\r\n    };\r\n\r\n    /**\r\n     * Gets the default order events should be called in\r\n     * @returns {string[]}\r\n     */\r\n    StateMachine.getDefaultOrder = function ()\r\n    {\r\n        return [\r\n            'action.*.start',\r\n            'action.{action}.start',\r\n            'state.*.{action}',\r\n            'state.{from}.{action}',\r\n            'state.{from}.leave',\r\n            'state.*.leave',\r\n            'state.*.enter',\r\n            'state.{to}.enter',\r\n            'action.{action}.end',\r\n            'action.*.end'\r\n        ];\r\n    };\r\n\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// helper functions\r\n\r\n    /**\r\n     * Utility method to update transitions and dispatch events\r\n     *\r\n     * Saves duplicating the following code in both add() and remove() methods\r\n     *\r\n     * @param   {StateMachine}  fsm\r\n     * @param   {string}        method\r\n     * @param   {Function}      callback\r\n     */\r\n    function updateTransitions(fsm, method, callback)\r\n    {\r\n        var statesBefore    = fsm.transitions.getStates();\r\n        var actionsBefore   = fsm.transitions.getActions();\r\n        callback();\r\n        var statesAfter     = fsm.transitions.getStates();\r\n        var actionsAfter    = fsm.transitions.getActions();\r\n\r\n        // calculate differences\r\n        var states          = diff(statesBefore, statesAfter);\r\n        var actions         = diff(actionsBefore, actionsAfter);\r\n\r\n        // dispatch events\r\n        states.forEach ( state  => fsm.handlers.trigger('system.state.'  + method, state) );\r\n        actions.forEach( action => fsm.handlers.trigger('system.action.' + method, action) );\r\n    }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/StateMachine.js","import {isObject, isArray, isDefined, isUndefined} from '../utils/utils';\r\n\r\n/**\r\n * Utility class to create, modify and delete nested hashes and values\r\n *\r\n * @constructor\r\n */\r\nexport default function ValueMap (data)\r\n{\r\n    this.data = data || {};\r\n}\r\n\r\nValueMap.prototype =\r\n{\r\n    data: null,\r\n\r\n    set: function (path, value)\r\n    {\r\n        set(this.data, path, value);\r\n        return this;\r\n    },\r\n\r\n    add:function(path, value)\r\n    {\r\n        add(this.data, path, value);\r\n        return this;\r\n    },\r\n\r\n    insert:function(path, value)\r\n    {\r\n        insert(this.data, path, value);\r\n        return this;\r\n    },\r\n\r\n    get:function(path)\r\n    {\r\n        return get(this.data, path);\r\n    },\r\n\r\n    has: function (path, value = undefined)\r\n    {\r\n        return has(this.data, path, value)\r\n    },\r\n\r\n    indexOf: function (path, value)\r\n    {\r\n        return indexOf(this.data, path, value)\r\n    },\r\n\r\n    remove: function (path, value = undefined)\r\n    {\r\n        remove(this.data, path, value);\r\n        return this;\r\n    },\r\n\r\n    keys:function(path)\r\n    {\r\n        return Object.keys(get(this.data, path));\r\n    },\r\n\r\n    values:function(path)\r\n    {\r\n        return values(this.data, path);\r\n    }\r\n\r\n};\r\n\r\nfunction create(obj, keys)\r\n{\r\n    let key;\r\n    while(keys.length)\r\n    {\r\n        key = keys.shift();\r\n        if( ! isObject(obj[key]) )\r\n        {\r\n            obj[key] = {};\r\n        }\r\n        obj = obj[key];\r\n    }\r\n    return obj;\r\n}\r\n\r\nexport function set(obj, path, value, index = -1)\r\n{\r\n    let keys = String(path).split('.'),\r\n        key  = keys.pop();\r\n    obj = create(obj, keys);\r\n    obj[key] = value;\r\n}\r\n\r\nfunction add(obj, path, value)\r\n{\r\n    let keys = String(path).split('.'),\r\n        key  = keys.pop();\r\n    obj = create(obj, keys);\r\n    if( ! isArray(obj[key]) )\r\n    {\r\n        obj[key] = [];\r\n    }\r\n    obj[key].push(value);\r\n}\r\n\r\nfunction insert(obj, path, value)\r\n{\r\n    let keys = String(path).split('.'),\r\n        key  = keys.pop();\r\n    obj = create(obj, keys);\r\n    if( ! isArray(obj[key]) )\r\n    {\r\n        obj[key] = [];\r\n    }\r\n    let parent = obj[key],\r\n        index = parent.indexOf(value);\r\n    if(index === -1)\r\n    {\r\n        parent.push(value);\r\n    }\r\n    else\r\n    {\r\n        parent[index] = value;\r\n    }\r\n}\r\n\r\nexport function get(obj, path)\r\n{\r\n    if(isUndefined(path) || path == '')\r\n    {\r\n        return obj;\r\n    }\r\n\r\n    let key,\r\n        keys = String(path).split('.');\r\n    while(keys.length > 1)\r\n    {\r\n        key = keys.shift();\r\n        if( ! obj.hasOwnProperty(key) )\r\n        {\r\n            return;\r\n        }\r\n        obj = obj[key];\r\n    }\r\n    key = keys.shift();\r\n    return obj[key];\r\n}\r\n\r\nexport function has(obj, path, value)\r\n{\r\n    let parent = get(obj, path);\r\n    return !! (isArray(parent) && isDefined(value)\r\n        ? parent.indexOf(value) !== -1\r\n        : isUndefined(value)\r\n            ? isDefined(parent)\r\n            : parent === value);\r\n}\r\n\r\nexport function indexOf (obj, path, value)\r\n{\r\n    let arr = get(obj, path);\r\n    if(isArray(arr))\r\n    {\r\n        return arr.indexOf(value);\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function remove(obj, path, value)\r\n{\r\n    let parent = obj,\r\n        keys = String(path || '').split('.'),\r\n        key = keys.pop();\r\n\r\n    if(keys.length)\r\n    {\r\n        parent = get(obj, keys.join('.'))\r\n    }\r\n    if(isDefined(value) && isArray(parent[key]))\r\n    {\r\n        let target = parent[key];\r\n        var index = target.indexOf(value);\r\n        if(index > -1)\r\n        {\r\n            target.splice(index, 1);\r\n            if(target.length === 0)\r\n            {\r\n                delete parent[key];\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    else\r\n    {\r\n        if(isObject(parent) && obj.hasOwnProperty(key))\r\n        {\r\n            delete parent[key];\r\n            return true;\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nexport function values(obj, path)\r\n{\r\n    var values = [];\r\n    var target = get(obj, path);\r\n    if(isObject(target))\r\n    {\r\n        for(var name in target)\r\n        {\r\n            if(target.hasOwnProperty(name))\r\n            {\r\n                values.push(target[name]);\r\n            }\r\n        }\r\n    }\r\n    return values;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/maps/ValueMap.js","// ------------------------------------------------------------------------------------------------\r\n// setup\r\n\r\n    /**\r\n     * @prop {string}       namespace   The Event namespace; i.e. state or action\r\n     * @prop {string}       type        The Event type;      i.e. leave/enter (state) or start/end (action)\r\n     * @prop {string}       target      The Event target;    i.e. intro (state), next (action), or * (all states or types)\r\n     * @prop {Transition}   transition  The transition which generated the event\r\n     */\r\n    let event =\r\n    {\r\n        // properties\r\n        namespace   : null,\r\n        type        : null,\r\n        target      : null,\r\n        transition          : null\r\n    };\r\n\r\n    function initialize (event, namespace, type, target, transition)\r\n    {\r\n        event.namespace     = namespace;\r\n        event.type          = type;\r\n        event.target        = target;\r\n        event.transition    = transition;\r\n    }\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------\r\n// ActionEvent\r\n\r\n    export function ActionEvent (type, target, transition)\r\n    {\r\n        initialize(this, 'action' ,type, target, transition);\r\n    }\r\n    ActionEvent.prototype = event;\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------\r\n// StateEvent\r\n\r\n    export function StateEvent (type, target, transition)\r\n    {\r\n        initialize(this, 'state' ,type, target, transition);\r\n    }\r\n    StateEvent.prototype = event;\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------\r\n// SystemEvent\r\n\r\n    export function SystemEvent (type, value)\r\n    {\r\n        this.type   = type;\r\n        this.value  = value;\r\n    }\r\n\r\n    SystemEvent.prototype =\r\n    {\r\n        namespace   : 'system',\r\n        type        : '',\r\n        value       : null\r\n    };\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------\r\n// TransitionEvent\r\n\r\n    export function TransitionEvent (type)\r\n    {\r\n        this.type = type;\r\n    }\r\n\r\n    TransitionEvent.prototype =\r\n    {\r\n        namespace   : 'transition',\r\n        type        : ''\r\n    };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/objects/events.js","export class ParseError extends Error {\r\n    constructor(message, path, id) {\r\n        super(message)\r\n        this.path = path;\r\n        this.id = id;\r\n        this.name = 'ParseError';\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/objects/errors.js","import StateMachine from './StateMachine'\r\nimport StateHelper from './StateHelper'\r\n\r\nexport default StateMachine\r\n\r\nexport {\r\n    StateMachine,\r\n    StateHelper\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import StateMachine from '../../StateMachine';\r\n\r\nexport default function Config (options = {})\r\n{\r\n    'scope start initial final invalid errors'\r\n        .match(/\\w+/g)\r\n        .forEach( name =>\r\n        {\r\n            if(options.hasOwnProperty(name))\r\n            {\r\n                this[name] = options[name];\r\n            }\r\n        });\r\n\r\n    // order\r\n    this.order      = options.order || StateMachine.getDefaultOrder();\r\n\r\n    // defaults\r\n    this.defaults   = Object.assign({\r\n\r\n        // allow user to specify alternate triggers for event and action ids\r\n        action      :'start',\r\n        state       :'enter'\r\n\r\n    }, options.defaults);\r\n}\r\n\r\nConfig.prototype =\r\n{\r\n    /**\r\n     * An optional scope to run handler functions in\r\n     *\r\n     * @var object\r\n     */\r\n    scope       : null,\r\n\r\n    /**\r\n     * A boolean to automatically start the state machine in the initial state\r\n     *\r\n     * @var boolean\r\n     */\r\n    start       : true,\r\n\r\n    /**\r\n     * A string to indicate which state to start on; defaults to ''\r\n     *\r\n     * @var string\r\n     */\r\n    initial     : '',\r\n\r\n    /**\r\n     * A string indicating the state to trigger a complete event; defaults to ''\r\n     *\r\n     * @var string\r\n     */\r\n    final       : '',\r\n\r\n    /**\r\n     * A boolean to allow non-existent states and actions to be added to the handlers object; defaults to false (disallow)\r\n     *\r\n     * @var boolean\r\n     */\r\n    invalid     : false,\r\n\r\n    /**\r\n     * A number indicating how to handle invalid or erroneous actions; defaults to 1 (warn)\r\n     *\r\n     *  - 0 : quiet\r\n     *  - 1 : console.warn()\r\n     *  - 2 : throw an error\r\n     *\r\n     * @var number\r\n     */\r\n    errors      : 1,\r\n\r\n    /**\r\n     * The order to run transition callbacks in\r\n     *\r\n     * @type {string[]} type.target\r\n     */\r\n    order       : null,\r\n\r\n    /**\r\n     * Sets defaults for various declarations\r\n     *\r\n     * Available options are:\r\n     *\r\n     * - action: (start|end)\r\n     * - state: (enter|leave)\r\n     *\r\n     * @type {Object}\r\n     */\r\n    defaults    : null,\r\n\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/Config.js","import ValueMap from './ValueMap';\r\nimport { SystemEvent, TransitionEvent, StateEvent, ActionEvent } from '../objects/events';\r\nimport { isFunction } from '../utils/utils';\r\n\r\nimport parseHandler from '../parsers/HandlerParser';\r\n\r\nfunction HandlerMap (fsm)\r\n{\r\n    this.fsm    = fsm;\r\n    this.map    = new ValueMap();\r\n}\r\n\r\nHandlerMap.prototype =\r\n{\r\n\r\n\tfsm: null,\r\n\r\n\tmap: null,\r\n\r\n    /**\r\n     * Parse event handler grammar into a HandlerMeta structure\r\n     *\r\n     * @param   {string}        id      The handler id to parse, i.e. '@next', 'intro:end', 'change', etc\r\n     * @returns {HandlerMeta[]}\r\n     */\r\n    parse: function (id)\r\n    {\r\n        return parseHandler(id, this.fsm.config.defaults);\r\n    },\r\n\r\n    /**\r\n     * Directly add a new handler\r\n     *\r\n     * @param   {string}    path    A 'namespace.target.type' target path to add a handler to\r\n     * @param   {Function}  fn      A callback function\r\n     * @returns {HandlerMap}\r\n     */\r\n    add: function (path, fn)\r\n    {\r\n        // check handler is a function\r\n        if(!isFunction(fn))\r\n        {\r\n            throw new Error('Error assigning \"' +path+ '\" handler; callback is not a function', fn);\r\n        }\r\n\r\n        this.map.insert(path, fn);\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Directly remove a handler target\r\n     *\r\n     * @param   {string}    path    A 'namespace.target.type' parent to a handler removed from\r\n     * @param   {Function}  fn      The instance of the callback function\r\n     * @returns {HandlerMap}\r\n     */\r\n    remove: function (path, fn)\r\n    {\r\n        this.map.remove(path, fn);\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Get all handlers for a valid target path\r\n     *\r\n     * @param   {string}    path    A 'namespace.target.type' target path\r\n     * @returns {Function[]}        An array of callback functions\r\n     */\r\n    get:function(path)\r\n    {\r\n        return this.map.get(path);\r\n    },\r\n\r\n    /**\r\n     * Dispatch an event\r\n     *\r\n     * @param   {string}    path\r\n     * @param   {*}         value\r\n     * @returns {StateMachine}\r\n     */\r\n    trigger: function (path, value = null)\r\n    {\r\n        // create lookup path\r\n        let [namespace, type, method] = path.match(/\\w+/g);\r\n\r\n        // build event\r\n        let event;\r\n        if(/^system\\.(state|action)\\./.test(path))\r\n        {\r\n            event = type === 'state'\r\n                ? new StateEvent(method, value)\r\n                : new ActionEvent(method, value);\r\n        }\r\n        else\r\n        {\r\n            event = namespace === 'system'\r\n                ? new SystemEvent(type, value)\r\n                : new TransitionEvent(type);\r\n        }\r\n\r\n        // dispatch\r\n        let handlers = this.map.get(path);\r\n        if(handlers)\r\n        {\r\n            handlers.forEach(fn => fn(event, this.fsm) );\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport default HandlerMap;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/maps/HandlerMap.js","import HandlerMeta from './HandlerMeta';\r\nimport Lexer from '../lexer/Lexer'\r\nimport { trim } from '../utils/utils';\r\nimport { ParseError } from '../objects/errors';\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------\r\n// functions\r\n\r\n    function isSystem(token)\r\n    {\r\n        return /^(start|change|complete|reset)$/.test(token);\r\n    }\r\n\r\n    function isTransition(token)\r\n    {\r\n        return /^(pause|resume|cancel)$/.test(token);\r\n    }\r\n\r\n    function expandGroups (input)\r\n    {\r\n        var rx \t\t= /\\((.+?)\\)/;\r\n        var matches = input.match(rx);\r\n        if(matches)\r\n        {\r\n            var group = matches[0];\r\n            var items = matches[1].match(/\\S+/g);\r\n            if(items)\r\n            {\r\n                items = items.map(item => input.replace(group, item));\r\n                if(rx.test(items[0]))\r\n                {\r\n                    return items.reduce( (output, input) => {\r\n                        return output.concat(expandGroups(input));\r\n                    }, []);\r\n                }\r\n                return items;\r\n            }\r\n        }\r\n        return [input];\r\n    }\r\n\r\n    function addPath (path, namespace, target)\r\n    {\r\n        results.push(new HandlerMeta(_id, path, namespace, target));\r\n        return true;\r\n    }\r\n\r\n    function addError (message, path)\r\n    {\r\n        var error = new ParseError(message, path, _id);\r\n        results.push(error);\r\n        return false;\r\n    }\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------\r\n// export\r\n\r\n    /**\r\n     * Parses event handler id into a HandlerMeta results containing handler paths\r\n     *\r\n     * @param   {string}    id          The handler id to parse, i.e. '@next', 'intro:end', 'change', etc\r\n     * @param   {Object}    defaults     A StateMachine instance to test for states and actions\r\n     * @return  {HandlerMeta[]}\r\n     */\r\n    export default function parse(id, defaults)\r\n    {\r\n        // pre-parse handler\r\n        id          = trim(id);\r\n\r\n        // objects\r\n        _id         = id;\r\n        _defaults   = defaults;\r\n        results     = [];\r\n\r\n        // parse\r\n        parser.parse(id, defaults);\r\n\r\n        // return\r\n        return results;\r\n    }\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------\r\n// objects\r\n\r\n    let results,\r\n        _defaults,\r\n        _id;\r\n\r\n    var patterns  =\r\n    {\r\n        // start pause intro\r\n        alias               : /^(\\w+)$/,\r\n\r\n        // system.start state.add\r\n        namespaced          : /^(system|transition|state|action)\\.(\\w+)$/,\r\n\r\n        // @next @quit\r\n        oneAction           : /^@(\\w+)$/,\r\n\r\n        // @next:start @next:end\r\n        oneActionEvent      : /^@(\\w+):(start|end)$/,\r\n\r\n        // :start :end\r\n        anyActionEvent      : /^:(start|end)$/,\r\n\r\n        // intro form\r\n        oneState            : /^#(\\w+)$/,\r\n\r\n        // intro:enter intro:leave\r\n        oneStateEvent       : /^#?(\\w+):(leave|enter)$/,\r\n\r\n        // :enter :leave\r\n        anyStateEvent       : /^:(enter|leave)$/,\r\n\r\n        // intro@next\r\n        oneStateAction      : /^#?(\\w+)@(\\w+)$/\r\n    };\r\n\r\n    let lexer   = new Lexer(patterns);\r\n\r\n    var parser =\r\n    {\r\n        /**\r\n         * Parses event handler id into HandlerMeta instance\r\n         *\r\n         * Resolving namespace, type and target properties\r\n         *\r\n         * @param   {string}        id\r\n         * @param   {Object}        defaults\r\n         */\r\n        parse (id, defaults)\r\n        {\r\n            // expand groups\r\n            let paths   = expandGroups(id);\r\n\r\n            // process paths\r\n            paths.forEach( path => this.parsePath(path) );\r\n        },\r\n\r\n        parsePath:function(path)\r\n        {\r\n            let tokens;\r\n            try\r\n            {\r\n                tokens = lexer.process(path)\r\n            }\r\n            catch(error)\r\n            {\r\n                return addError('Unrecognised pattern \"' +path+ '\"', path);\r\n            }\r\n\r\n            if(tokens && tokens.length)\r\n            {\r\n                // variables\r\n                let token   = tokens.shift();\r\n                var fn      = this[token.type];\r\n\r\n                // process\r\n                if(fn)\r\n                {\r\n                    return fn.apply(this, token.values);\r\n                }\r\n                return addError('Unknown token type \"' +token.type+ '\"', path);\r\n            }\r\n        },\r\n\r\n        alias (value)\r\n        {\r\n            if (isSystem(value))\r\n            {\r\n                return addPath('system.' + value, 'system');\r\n            }\r\n            if (isTransition(value))\r\n            {\r\n                return addPath('transition.' + value, 'transition');\r\n            }\r\n            return this.oneState(value);\r\n        },\r\n\r\n        namespaced (namespace, type)\r\n        {\r\n            var path = namespace + '.' + type;\r\n\r\n            if(namespace === 'system' && isSystem(type) || namespace === 'transition' && isTransition(type))\r\n            {\r\n                return addPath(path, namespace);\r\n            }\r\n\r\n            if(/^(state|action)$/.test(namespace) && /^(add|remove)$/.test(type))\r\n            {\r\n                return addPath('system.' + path, 'system');\r\n            }\r\n\r\n            addError('Unrecognised type \"' +type+'\" for namespace \"' +namespace+ '\"', _id)\r\n        },\r\n\r\n        oneState (state)\r\n        {\r\n            return addPath('state.' + state + '.' + _defaults.state, 'state', state);\r\n        },\r\n\r\n        oneAction (action)\r\n        {\r\n            return addPath('action.' +action+ '.' +_defaults.action, 'action', action);\r\n        },\r\n\r\n        anyActionEvent (event)\r\n        {\r\n            return addPath('action.*.' + event, 'action', '*');\r\n        },\r\n\r\n        oneActionEvent (action, event)\r\n        {\r\n            return addPath('action.' +action+ '.' + event, 'action', action);\r\n        },\r\n\r\n        anyStateEvent (event)\r\n        {\r\n            return addPath('state.*.' + event, 'state', '*');\r\n        },\r\n\r\n        oneStateEvent (state, event)\r\n        {\r\n            return addPath('state.' +state+ '.' + event, 'state', state);\r\n        },\r\n\r\n        oneStateAction (state, action)\r\n        {\r\n            return addPath('state.' +state+ '.' + action, 'state/action', state + '@' + action);\r\n        }\r\n\r\n    };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/parsers/HandlerParser.js","function HandlerMeta (id, path, namespace = '', target = '')\r\n{\r\n    this.id         = id;\r\n    this.path       = path;\r\n    if(namespace)\r\n    {\r\n        this.namespace  = namespace;\r\n    }\r\n    if(target)\r\n    {\r\n        this.target     = target;\r\n    }\r\n}\r\n\r\nHandlerMeta.prototype =\r\n{\r\n    id          : '',\r\n    path        : '',\r\n    namespace   : '',\r\n    target      : ''\r\n};\r\n\r\nexport default HandlerMeta;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/parsers/HandlerMeta.js","import Rule from './Rule';\r\nimport Token from './Token';\r\n\r\n/**\r\n * Simple Lexer class\r\n *\r\n * @param   {Object}    rules   A hash of id:RegExp values\r\n * @constructor\r\n */\r\nexport default function Lexer(rules)\r\n{\r\n    this.rules = [];\r\n    if(rules)\r\n    {\r\n        Object.keys(rules).forEach( name => this.addRule(name, rules[name]) );\r\n    }\r\n}\r\n\r\nLexer.prototype =\r\n{\r\n    /** @var {String} */\r\n    source  : null,\r\n\r\n    /** @var {Rule[]} */\r\n    rules   : null,\r\n\r\n    /** @var {Token[]} */\r\n    tokens  : null,\r\n\r\n    /** @var {Number} */\r\n    index   : 0,\r\n\r\n    /**\r\n     * Process a source string into an array of Tokens based on Rules\r\n     *\r\n     * @param source\r\n     * @returns {Token[]}\r\n     */\r\n    process:function(source)\r\n    {\r\n        this.source = source;\r\n        this.tokens = [];\r\n        this.index  = 0;\r\n        this.next();\r\n        return this.tokens;\r\n    },\r\n\r\n    /**\r\n     * Adds a new rule\r\n     *\r\n     * @protected\r\n     * @param name\r\n     * @param rx\r\n     */\r\n    addRule:function(name, rx)\r\n    {\r\n        this.rules.push(new Rule(name, rx));\r\n    },\r\n\r\n    next:function()\r\n    {\r\n        if(this.index < this.source.length)\r\n        {\r\n            let source  = this.source.substr(this.index);\r\n            let state = this.rules.some(rule =>\r\n            {\r\n                var matches = source.match(rule.rx);\r\n                if(matches)\r\n                {\r\n                    this.tokens.push(new Token(rule.name, matches));\r\n                    this.index += matches[0].length;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n\r\n            // not matched\r\n            if(!state)\r\n            {\r\n                throw new LexerError('Unable to match source at position ' + this.index + ': \"' +source+'\"', this.source, this.index);\r\n            }\r\n\r\n            // match\r\n            this.next();\r\n        }\r\n    }\r\n};\r\n\r\nfunction LexerError(message, source, index)\r\n{\r\n    this.message = message;\r\n    this.source = source;\r\n    this.index = index;\r\n}\r\n\r\nLexerError.prototype = new Error;\r\nLexerError.prototype.constructor = LexerError;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/lexer/Lexer.js","/**\r\n * A parsing rule, designed to match part of a string\r\n *\r\n * @param   {string}    name\r\n * @param   {RegExp}    rx\r\n */\r\nfunction Rule(name, rx)\r\n{\r\n    this.name = name;\r\n    this.rx = rx;\r\n}\r\n\r\nexport default Rule;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/lexer/Rule.js","/**\r\n * Token class, representing the type and value of part of a source string\r\n *\r\n * @param       {string}    type\r\n * @param       {string[]}  matches\r\n *\r\n * @property    {string}    type\r\n * @property    {string}    match\r\n * @property    {string[]}  values\r\n */\r\nfunction Token(type, matches)\r\n{\r\n    this.type       = type;\r\n    this.match      = matches[0];\r\n    this.values     = matches.slice(1);\r\n}\r\n\r\nexport default Token;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/lexer/Token.js","import ValueMap from './ValueMap';\r\nimport parseTransition from '../parsers/TransitionParser'\r\nimport { trim } from '../utils/utils'\r\n\r\nfunction TransitionMap ()\r\n{\r\n    this.map        = new ValueMap();\r\n    this.states     = [];\r\n    this.actions    = [];\r\n}\r\n\r\nTransitionMap.prototype =\r\n{\r\n    // ------------------------------------------------------------------------------------------------\r\n    // properties\r\n\r\n        map     : null,\r\n        states  : null,\r\n        actions : null,\r\n\r\n\r\n    // ------------------------------------------------------------------------------------------------\r\n    // add and remove states\r\n\r\n        /**\r\n         * Add event handler parsing\r\n         *\r\n         * @param   {string}    tx\r\n         * @returns {TransitionMeta[]}\r\n         */\r\n        parse: function (tx)\r\n        {\r\n            return parseTransition(tx);\r\n        },\r\n\r\n        /**\r\n         * Adds a new transition\r\n         * \r\n         * @param   {string}    action\r\n         * @param   {string}    from\r\n         * @param   {string}    to\r\n         * @returns {TransitionMap}\r\n         */\r\n        add: function (action, from, to)\r\n        {\r\n            // procss variables\r\n            action  = trim(action);\r\n            from    = trim(from);\r\n            to      = typeof to === 'string' ? trim(to) : to;\r\n\r\n            // check for wildcards\r\n            if(to === '*')\r\n            {\r\n                throw new Error('Transitioning to a wildcard doesn\\'t make sense');\r\n            }\r\n\r\n            // add transition\r\n            this.map.set(from + '.' + action, to);\r\n            return update(this);\r\n        },\r\n\r\n        /**\r\n         * Removes an existing state\r\n         *\r\n         * @param   {string}    state\r\n         * @returns {TransitionMap}\r\n         */\r\n        remove: function (state)\r\n        {\r\n            // remove \"from\" state\r\n            this.map.remove(state);\r\n\r\n            // remove \"to\" states\r\n            let data = this.map.data;\r\n            for(let name in data)\r\n            {\r\n                let from = data[name];\r\n                for(let action in from)\r\n                {\r\n                    if(from[action] === state)\r\n                    {\r\n                        delete from[action];\r\n                    }\r\n                }\r\n            }\r\n\r\n            // update and return\r\n            return update(this);\r\n        },\r\n\r\n\r\n    // ------------------------------------------------------------------------------------------------\r\n    // accessors\r\n\r\n        /**\r\n         * Get all available actions (or action => states map) for a given state\r\n         *\r\n         * @param   {string}    from        Name of a state to get actions for\r\n         * @param   {boolean}   [asMap]     Optional boolean to return a Object of action:state properties. Defaults to false\r\n         * @returns {string[]|Object}       An array of string actions, or a hash of action:states\r\n         */\r\n        getActionsFrom: function (from, asMap = false)\r\n        {\r\n            if(this.has(from) || this.has('*'))\r\n            {\r\n                // get all available actions\r\n                let actions     = this.map.get(from) || {};\r\n                let wildcard    = this.map.get('*');\r\n                let output      = Object.assign({}, actions);\r\n\r\n                // append wildcard actions\r\n                if(wildcard)\r\n                {\r\n                    for(var action in wildcard)\r\n                    {\r\n                        let value = wildcard[action];\r\n                        if(value !== from && !actions[action])\r\n                        {\r\n                            output[action] = value;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // return map or keys\r\n                return output\r\n                    ? asMap\r\n                        ? output\r\n                        : Object.keys(output)\r\n                    : [];\r\n            }\r\n            return [];\r\n        },\r\n\r\n        /**\r\n         * Get the first available action to move from one state to another (if there is one)\r\n         *\r\n         * @param   {string}    from\r\n         * @param   {string}    to\r\n         * @return  {string|null}\r\n         */\r\n        getActionFor: function (from, to)\r\n        {\r\n            let actions = this.map.get(from);\r\n            for(let action in actions)\r\n            {\r\n                if(actions[action] === to)\r\n                {\r\n                    return action;\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * Get all available \"to\" states for a given state\r\n         *\r\n         * Loops over all actions and returns a unique array of \"to\" states\r\n         *\r\n         * @param   {string|null}    [from]     Optional name of a from state to get states for. Defaults to the current state\r\n         * @returns {string[]}                  An array of string states\r\n         */\r\n        getStatesFrom: function (from)\r\n        {\r\n            if(this.hasState(from))\r\n            {\r\n                let actions = this.getActionsFrom(from, true);\r\n                return Object.keys(actions).map( name => actions[name] );\r\n            }\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * Get the target \"to\" state from a \"from\" state via an \"action\"\r\n         *\r\n         * @param   {string}    from\r\n         * @param   {string}    action\r\n         * @returns {string}\r\n         */\r\n        getStateFor: function (from, action)\r\n        {\r\n            let states = this.getActionsFrom(from, true) || {};\r\n            return states[action];\r\n        },\r\n\r\n        /**\r\n         * Get all states within the system\r\n         *\r\n         * @return  {string[]}\r\n         */\r\n        getStates: function ()\r\n        {\r\n            return [].concat(this.states);\r\n        },\r\n\r\n        /**\r\n         * Get all actions within the system\r\n         *\r\n         * @return  {string[]}\r\n         */\r\n        getActions: function ()\r\n        {\r\n            return [].concat(this.actions);\r\n        },\r\n\r\n        /**\r\n         * General getter\r\n         *\r\n         * @param   {string}    path\r\n         * @return  {*}\r\n         */\r\n        get: function(...path)\r\n        {\r\n            path = [...path].join('.');\r\n            return this.map.get(path);\r\n        },\r\n\r\n\r\n    // ------------------------------------------------------------------------------------------------\r\n    // checks\r\n\r\n        /**\r\n         * Test if the given state exists within the system\r\n         *\r\n         * @param   {string}    state\r\n         * @returns {boolean}\r\n         */\r\n        hasState: function (state)\r\n        {\r\n            return this.states.indexOf(state) !== -1;\r\n        },\r\n\r\n        /**\r\n         * Test if the given action exists within the system\r\n         *\r\n         * @param   {string}    action\r\n         * @returns {boolean}\r\n         */\r\n        hasAction: function (action)\r\n        {\r\n            return this.actions.indexOf(action) !== -1;\r\n        },\r\n\r\n        /**\r\n         * Test if the given transition exists within the system\r\n         *\r\n         * @param   {string}    action\r\n         * @param   {string}    from\r\n         * @param   {string}    to\r\n         * @returns {boolean}\r\n         */\r\n        hasTransition: function (action, from, to)\r\n        {\r\n            return this.map.get(from + '.' + action) === to;\r\n        },\r\n\r\n        /**\r\n         * Utility function to directly check if the composed ValueMap has the requested path\r\n         *\r\n         * Note this does NOT take into account the value of the target object; use hasTransition() for that\r\n         *\r\n         * @param   {string}    path    Pass a path using dot notation, i.e. 'a.next' or pass individual arguments, i.e. from, action, to\r\n         * @returns {boolean}\r\n         */\r\n        has: function (...path)\r\n        {\r\n            path = [...path].join('.');\r\n            return !! path\r\n                ? this.map.has(path)\r\n                : false;\r\n        }\r\n\r\n};\r\n\r\nTransitionMap.prototype.constructor = TransitionMap;\r\n\r\n/**\r\n * Private utility function to update existing states and actions\r\n *\r\n * @param   {TransitionMap} target\r\n * @returns {TransitionMap}\r\n */\r\nfunction update(target)\r\n{\r\n    // variables\r\n    var actions     = {};\r\n    var states      = {};\r\n    var data        = target.map.data;\r\n    var to;\r\n\r\n    // collate from states\r\n    for(let from in data)\r\n    {\r\n        states[from] = true;\r\n        for(let action in data[from])\r\n        {\r\n            actions[action] = true;\r\n            to = data[from][action];\r\n            if(typeof to !== 'function')\r\n            {\r\n                states[to] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // update\r\n    target.states  = Object.keys(states).filter(state => state !== '*');\r\n    target.actions = Object.keys(actions);\r\n\r\n    // return\r\n    return target;\r\n}\r\n\r\nexport default TransitionMap;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/maps/TransitionMap.js","import { isString } from '../utils/utils';\r\nimport { ParseError } from '../objects/errors';\r\nimport TransitionMeta from './TransitionMeta';\r\n\r\n// ------------------------------------------------------------------------------------------------\r\n// functions\r\n\r\n    function getError(tx, message)\r\n    {\r\n        return 'Invalid transition shorthand pattern \"' +tx+ '\" - ' + message;\r\n    }\r\n\r\n    function add(transitions, action, from, to)\r\n    {\r\n        transitions.push(new TransitionMeta(action, from, to));\r\n    }\r\n\r\n\r\n// ------------------------------------------------------------------------------------------------\r\n// export\r\n\r\n    /**\r\n     * Parses/expands transition objects/strings into discrete transitions\r\n     *\r\n     * @returns {TransitionMeta[]}  An array of TransitionMeta instances\r\n     */\r\n    export default function parse (tx)\r\n    {\r\n        if(isString(tx))\r\n        {\r\n            // pre-process string\r\n            tx = tx\r\n                .replace(/([|=:<>])/g, ' $1 ')\r\n                .replace(/\\s+/g, ' ')\r\n                .replace(/^\\s+|\\s+$/g,'');\r\n\r\n            // ensure string is valid\r\n            if(!/^\\w+ [:=] [*\\w][\\w ]*[|<>] [*\\w][\\w ]*/.test(tx))\r\n            {\r\n                throw new ParseError(getError(tx, 'cannot determine action and states'));\r\n            }\r\n\r\n            // initialize variables\r\n            let transitions = [],\r\n                matches = tx.match(/([*\\w ]+|[|<>])/g),\r\n                action  = matches.shift().replace(/\\s+/g, ''),\r\n                stack   = [],\r\n                match   = '',\r\n                op      = '',\r\n                a       = '',\r\n                b       = '';\r\n\r\n            // process states\r\n            while(matches.length)\r\n            {\r\n                // get the next match\r\n                match = matches.shift();\r\n\r\n                // reset stack if | was passed\r\n                if(match === '|')\r\n                {\r\n                    stack = [];\r\n                    match = matches.shift();\r\n                }\r\n\r\n                // process match\r\n                if(/[<>]/.test(match))\r\n                {\r\n                    op = match;\r\n                }\r\n                else\r\n                {\r\n                    match = match.match(/[*\\w]+/g);\r\n                    match = match.length === 1 ? match[0] : match;\r\n                    stack.push(match);\r\n                }\r\n\r\n                // process matches if stack is full\r\n                if(stack.length === 2)\r\n                {\r\n                    [a, b] = op === '<'\r\n                        ? [stack[1], stack[0]]\r\n                        : stack;\r\n                    if(Array.isArray(a) && Array.isArray(b))\r\n                    {\r\n                        throw new ParseError(getError(tx, 'transitioning between 2 arrays doesn\\'t make sense'));\r\n                    }\r\n                    if(b === '*')\r\n                    {\r\n                        throw new ParseError(getError(tx, 'transitioning to a wildcard doesn\\'t make sense'));\r\n                    }\r\n                    if(Array.isArray(a))\r\n                    {\r\n                        a.forEach( a => add(transitions, action, a, b) );\r\n                    }\r\n                    else if(Array.isArray(b))\r\n                    {\r\n                        b.forEach( b => add(transitions, action, a, b) );\r\n                    }\r\n                    else\r\n                    {\r\n                        add(transitions, action, a, b);\r\n                    }\r\n\r\n                    // discard original match once processed\r\n                    stack.shift();\r\n                }\r\n\r\n            }\r\n\r\n            // return\r\n            return transitions;\r\n        }\r\n\r\n        // return objects wrapped in an array\r\n        return [tx];\r\n    }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/parsers/TransitionParser.js","function TransitionMeta(action, from, to)\r\n{\r\n    this.action = action;\r\n    this.from = from;\r\n    this.to = to;\r\n}\r\n\r\nexport default TransitionMeta;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/parsers/TransitionMeta.js","import { StateEvent, ActionEvent } from '../objects/events';\r\nimport { isFunction } from '../utils/utils';\r\n\r\n/**\r\n * Transition class\r\n *\r\n * Responsible for managing events in the flow from state to state.\r\n *\r\n * This adds all handlers for the current action start/end and state from/to to an array:\r\n *\r\n * - <namespace>.<target>.<type>[]\r\n *\r\n * So going from state \"a\" to state \"b\" with action \"next\" should build:\r\n *\r\n * - action.*.start[]\r\n * - action.next.start[]\r\n * - state.a.leave[]\r\n * - state.*.leave[]\r\n * - state.*.enter[]\r\n * - state.b.enter[]\r\n * - action.next.end[]\r\n * - action.*.end[]\r\n *\r\n * This can be changed by passing in an order array in fsm.config\r\n *\r\n * Event handlers will receive an Event object, along with any passed parameters (from do()) as ...rest parameters.\r\n *\r\n * From a callback, you can:\r\n *\r\n * - return false to cancel the transition\r\n * - return true to pause the transition\r\n * - not return a value (the transition continues)\r\n *\r\n * TransitionMap can also be paused, resumed, or cancelled by calling\r\n * the appropriate method on, or from:\r\n *\r\n * - the event\r\n * - the transition\r\n * - the state machine\r\n *\r\n * Cancelled transitions will reset the FSM to the previous \"from\" state\r\n *\r\n * When the last callback has fired, the main FSM's end() handler will be called and the state will updated\r\n *\r\n * @param {StateMachine}    fsm\r\n * @param {string}          action\r\n * @param {string}          from\r\n * @param {string}          to\r\n */\r\nfunction Transition (fsm, action, from, to)\r\n{\r\n    this.fsm        = fsm;\r\n    this.action     = action;\r\n    this.from       = from;\r\n    this.to         = to;\r\n    this.clear();\r\n}\r\n\r\n/**\r\n * @prop {StateMachine}    fsm\r\n * @prop {string}          action\r\n * @prop {string}          from\r\n * @prop {string}          to\r\n * @prop {Function[]}      handlers\r\n */\r\nTransition.prototype =\r\n{\r\n    fsm         : null,\r\n    action      : '',\r\n    from        : '',\r\n    to          : '',\r\n    paused      : false,\r\n    handlers    : null,\r\n\r\n    clear: function ()\r\n    {\r\n        unpause(this);\r\n        this.handlers = [];\r\n    },\r\n\r\n    /**\r\n     * Execute the next event's callbacks\r\n     * @returns {*}\r\n     */\r\n\texec: function ()\r\n\t{\r\n\t    if( ! this.paused )\r\n        {\r\n            if(this.handlers.length)\r\n            {\r\n                var handler = this.handlers.shift();\r\n                var state = handler();\r\n                if(state === false)\r\n                {\r\n                    return this.fsm.cancel();\r\n                }\r\n                if(state === true)\r\n                {\r\n                    return this.fsm.pause();\r\n                }\r\n                this.exec();\r\n            }\r\n            else\r\n            {\r\n                this.fsm.end();\r\n            }\r\n        }\r\n        return this;\r\n\t},\r\n\r\n    pause: function ()\r\n    {\r\n        pause(this);\r\n        return this;\r\n    },\r\n\r\n    resume: function ()\r\n    {\r\n        unpause(this);\r\n        return this.exec();\r\n    },\r\n\r\n    cancel: function()\r\n    {\r\n        this.paused = false;\r\n        this.fsm.handlers.trigger('transition.cancel', false);\r\n    }\r\n\r\n};\r\n\r\nfunction pause(transition)\r\n{\r\n    if(!transition.paused)\r\n    {\r\n        transition.paused = true;\r\n        transition.fsm.handlers.trigger('transition.pause', true);\r\n    }\r\n}\r\n\r\nfunction unpause(transition)\r\n{\r\n    if(transition.paused)\r\n    {\r\n        transition.paused = false;\r\n        transition.fsm.handlers.trigger('transition.resume', false);\r\n    }\r\n}\r\n\r\nexport default\r\n{\r\n    /**\r\n     * Create the Transition object\r\n     *\r\n     * - Set up variables, and queue\r\n     * - Determine paths to relevant handlers\r\n     * - Build State and Action Event objects\r\n     * - Pre-bind all handlers\r\n     * - Append to queue\r\n     *\r\n     * @param {StateMachine}    fsm\r\n     * @param {string}          action\r\n     * @param {Array}           params\r\n     * @returns {Transition}\r\n     */\r\n    create:function (fsm, action, params)\r\n    {\r\n        // transition properties\r\n        let scope   = fsm.config.scope;\r\n        let from    = fsm.state;\r\n        let to      = fsm.transitions.getStateFor(from, action);\r\n\r\n        // handle \"to\" being a function\r\n        if(isFunction(to))\r\n        {\r\n            to = to.apply(scope, [fsm].concat(params));\r\n            if(!fsm.transitions.hasState(to))\r\n            {\r\n                throw new Error('Invalid \"to\" state \"' +to+ '\"');\r\n            }\r\n        }\r\n\r\n        // transition\r\n        let vars        = {action, to, from};\r\n        let queue       = [];\r\n        let transition  = new Transition(fsm, action, from, to);\r\n\r\n        // build handlers array\r\n        fsm.config.order.forEach( path =>\r\n        {\r\n            // replace path tokens\r\n            path = path.replace(/{(\\w+)}/g, (all, token) => vars[token]);\r\n            let handlers = fsm.handlers.get(path);\r\n\r\n            // do it!\r\n            if(handlers)\r\n            {\r\n                let [namespace, target, type] = path.split('.');\r\n                handlers = handlers.map( handler =>\r\n                {\r\n                    // build event object\r\n                    let Event = namespace === 'state' ? StateEvent : ActionEvent;\r\n                    let event = new Event(type, target, transition);\r\n\r\n                    // pre-bind handlers, scopes and params\r\n                    // this way scope and params don't need to be passed around\r\n                    // and the call from Transition is always just `value = handler()`\r\n                    return function()\r\n                    {\r\n                        return handler.apply(scope, [event, fsm].concat(params));\r\n                    }\r\n                });\r\n\r\n                // add to queue\r\n                queue = queue.concat(handlers);\r\n            }\r\n        });\r\n\r\n        // return\r\n        transition.handlers = queue;\r\n        return transition;\r\n    },\r\n\r\n    force: function(fsm, state)\r\n    {\r\n        let transition = new Transition(fsm, '', fsm.state, state);\r\n        transition.paused = fsm.transition ? fsm.transition.paused : false;\r\n        return transition;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/Transition.js","import object from './helpers/ObjectHelper';\r\nimport jQuery from'./helpers/jQueryHelper';\r\nimport vueRouter from'./helpers/VueRouter';\r\n\r\nexport default {\r\n    object,\r\n    jQuery,\r\n    vueRouter\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/StateHelper.js","import { toHash } from '../core/utils/utils';\r\n\r\nfunction ObjectHelper (fsm)\r\n{\r\n    this.data = {};\r\n    this.fsm = fsm;\r\n    this.fsm\r\n        .on('change', this.onChange.bind(this))\r\n        .on('(pause resume cancel)', this.onPause.bind(this))\r\n        .on('(state.add state.remove action.add action.remove)', this.onModify.bind(this));\r\n    this.reset();\r\n    this.update();\r\n}\r\n\r\nObjectHelper.prototype =\r\n{\r\n    fsm : null,\r\n\r\n    data : null,\r\n\r\n    update:function()\r\n    {\r\n        this.onChange();\r\n        this.onPause();\r\n        this.onModify();\r\n    },\r\n\r\n    reset: function ()\r\n    {\r\n        this.data =\r\n        {\r\n            name     : '',\r\n            index    : -1,\r\n            paused   : false,\r\n            is       : {},\r\n            actions  : {},\r\n            states   : {},\r\n            all:{\r\n                states  :[],\r\n                actions :[]\r\n            }\r\n        }\r\n    },\r\n\r\n    onPause:function(event)\r\n    {\r\n        this.data.paused        = this.fsm.isPaused();\r\n    },\r\n\r\n    onModify:function(event)\r\n    {\r\n        this.data.all.states    = this.fsm.transitions.getStates();\r\n        this.data.all.actions   = this.fsm.transitions.getActions();\r\n    },\r\n\r\n    onChange:function(event)\r\n    {\r\n        var fsm                 = this.fsm;\r\n        this.data.name          = fsm.state;\r\n        this.data.index         = this.fsm.transitions.states.indexOf(this.data.name);\r\n        this.data.states        = toHash(fsm.transitions.getStatesFrom(fsm.state) || []);\r\n        this.data.actions       = toHash(fsm.transitions.getActionsFrom(fsm.state) || []);\r\n        this.data.is            = {};\r\n        this.data.is[fsm.state] = true;\r\n    }\r\n\r\n};\r\n\r\nexport default function setup (fsm)\r\n{\r\n    return new ObjectHelper(fsm);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/ObjectHelper.js","function jQueryHelper (fsm, states, controls, state, control)\r\n{\r\n    // fsm\r\n    this.fsm = fsm;\r\n\r\n    // selectors\r\n    this.selectors =\r\n    {\r\n        state    : state || '[id]',\r\n        control  : control || '[name]'\r\n    };\r\n\r\n    // elements\r\n    this.elements =\r\n    {\r\n        states      : $(states || '#states'),\r\n        controls    : $(controls || '#controls')\r\n    };\r\n\r\n    // live-bind button clicks to fsm actions\r\n    this.elements.controls.on('click', this.selectors.control, event => {\r\n        this.fsm.do(event.target.name);\r\n    });\r\n\r\n    // bind event handlers\r\n    this.fsm\r\n        .on('change', this.onChange.bind(this))\r\n        .on('(pause resume cancel)',  this.onPause.bind(this))\r\n        .on('(state.add state.remove)',  this.onModifyStates.bind(this))\r\n        .on('(action.add action.remove)',  this.onModifyActions.bind(this));\r\n\r\n    // update\r\n    this.update();\r\n}\r\n\r\njQueryHelper.prototype =\r\n{\r\n    fsm : null,\r\n\r\n    elements : null,\r\n\r\n    selectors : null,\r\n\r\n    update ()\r\n    {\r\n        this.updateStates();\r\n        this.updateButtons();\r\n    },\r\n\r\n    updateStates ()\r\n    {\r\n        var state = this.fsm.state;\r\n        if(state)\r\n        {\r\n            // assign state\r\n            this.elements.states\r\n                .attr('data-state', state);\r\n\r\n            // assign active class to the current state\r\n            this.elements.states\r\n                .find(this.selectors.state)\r\n                .removeClass('active')\r\n                .filter('#'  + state)\r\n                .addClass('active');\r\n        }\r\n    },\r\n\r\n    updateButtons ()\r\n    {\r\n        var paused = this.fsm.isPaused();\r\n        this.elements.controls\r\n            .find(this.selectors.control)\r\n            .each( (i, e) => {\r\n                e.disabled = ! this.fsm.canDo(e.name) || paused;\r\n            });\r\n    },\r\n\r\n    onChange (event)\r\n    {\r\n        this.updateStates();\r\n        this.updateButtons();\r\n    },\r\n\r\n    onPause (event)\r\n    {\r\n        // assign paused\r\n        this.elements.states\r\n            .toggleClass('paused', this.fsm.isPaused());\r\n\r\n        // update buttons\r\n        this.updateButtons();\r\n    },\r\n\r\n    onModifyStates (event)\r\n    {\r\n        this.updateStates();\r\n    },\r\n\r\n    onModifyActions (event)\r\n    {\r\n        this.updateButtons();\r\n    }\r\n\r\n};\r\n\r\nexport default function setup (fsm, states, controls, state, control)\r\n{\r\n    return new jQueryHelper(fsm, states, controls, state, control);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/jQueryHelper.js","/**\r\n * Setup relationship between VueRouter and StateHelper\r\n *\r\n * @param   {VueRouter}     router      The VueRouter instance\r\n * @param   {StateObject}   object      The StateObject instance\r\n * @param   {Object}        object      Setup parameters\r\n */\r\nexport default function setup (router, object, params)\r\n{\r\n    function updateRoute()\r\n    {\r\n        return router[params.method]({name: object.fsm.state})\r\n    }\r\n\r\n    params = params || {};\r\n    params.method = typeof(router[params.method] === 'function') ? params.method : 'push';\r\n\r\n    // set the current route as current state\r\n    object.fsm.state = router.currentRoute.name;\r\n    // manually update helper\r\n    object.update();\r\n\r\n    // update route when state updates\r\n    object.fsm.on('change', updateRoute);\r\n\r\n    // update state when route updates\r\n    router.afterEach(function(route)\r\n    {\r\n        // directly set state so state machine event handlers are not triggered\r\n        object.fsm.state = route.name;\r\n\r\n        // manually update helper\r\n        object.update();\r\n    });\r\n\r\n    // immediately update route\r\n    updateRoute();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/VueRouter.js"],"sourceRoot":""}